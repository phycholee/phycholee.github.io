<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PhychoLee's Blog</title>
    <description></description>
    <link>http://phycholee.github.com/</link>
    <atom:link href="http://phycholee.github.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 06 Aug 2016 14:27:14 +0000</pubDate>
    <lastBuildDate>Sat, 06 Aug 2016 14:27:14 +0000</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Java线程知识点</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Java线程学习笔记&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我对Java线程的运用比少，在JavaEE对框架进行开发很少用到多线程，在Android开发中稍微运用多一些，但知识最简单的创建线程，调用run方法。
这几天在慕课网观看视频&lt;em&gt;&lt;a href=&quot;http://www.imooc.com/view/312&quot;&gt;细说多线程之Thread VS Runnable&lt;/a&gt;&lt;/em&gt;重新系统学习Java线程知识，对其进行归纳总结，以下是知识笔记：&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;线程创建的两种方式&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;继承Thread类&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;vi&quot;&gt;@Override&lt;/span&gt;
		&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;no&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;创建线程&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;启动线程&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;实现Runnable接口&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;vi&quot;&gt;@Override&lt;/span&gt;
		&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;no&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;创建线程&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;启动线程&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;实现Runnable接口方式可以避免Thread方式是单继承特性带来的缺陷。同时Runnable方法的代码可以被多个线程&lt;strong&gt;共享&lt;/strong&gt;，适用于多个线程共享同一资源的情况。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;线程生命周期&lt;/h3&gt;

&lt;p&gt;一张图解释
&lt;img src=&quot;/assets/posts_img/20160806/thread_lifecircle.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;守护线程&lt;/h3&gt;

</description>
        <pubDate>Sat, 06 Aug 2016 13:03:11 +0000</pubDate>
        <link>http://phycholee.github.com/java/2016/08/06/java-thread.html</link>
        <guid isPermaLink="true">http://phycholee.github.com/java/2016/08/06/java-thread.html</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>今日感想</title>
        <description>&lt;p&gt;今天把GitHub Page搭起来了，作为个人博客。&lt;/p&gt;

&lt;p&gt;用了 &lt;a href=&quot;http://huangxuan.me/&quot;&gt;Hux&lt;/a&gt; 的主题模板，因为我个人的前端很差。&lt;/p&gt;

&lt;p&gt;其实很早就想搭建GitHub Page，当时看到Jekyll好像有点难，就退缩了。这次经过两天的摸索，终于把一部分功能搞定了，接下来还要弄分类和分页，再来还要给自己的信息做一个完美的展示，相信不会难，只要入门了，一切就好办了。&lt;/p&gt;

&lt;p&gt;其实这篇也算是篇测试文章，但干脆给自己写点话，已经很久没有写过东西了，甚至连800字的作文也忘记怎么下手了，虽然是一个理科生，但也应该好好学学吹牛逼，不对是表达能力。心里清楚却无从下口，不能对事情进行清晰合理的表达，这是我目前很大的缺点。&lt;/p&gt;

&lt;p&gt;好了，今天的感想到此为止，不会长篇大论，也不必要，改天再来完善。&lt;/p&gt;

&lt;p&gt;三星Galaxy Note7好美，虽然还是觉得没超过S7 edge。不过反正没钱。
&lt;img src=&quot;/assets/posts_img/20160805/20160805_todaytalk01.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;蓝色简直美爆
&lt;img src=&quot;/assets/posts_img/20160805/20160805_todaytalk02.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;完！感觉尾巴好空啊。&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Aug 2016 11:36:40 +0000</pubDate>
        <link>http://phycholee.github.com/todaytalk/2016/08/05/today-talk.html</link>
        <guid isPermaLink="true">http://phycholee.github.com/todaytalk/2016/08/05/today-talk.html</guid>
        
        
        <category>todayTalk</category>
        
      </item>
    
      <item>
        <title>小米Note2将登场 传下周开始发送邀请函</title>
        <description>&lt;p&gt;此前一直传闻小米会在8月16日发布新机，而现在则有了进一步的消息。根据网友在微博上的爆料称，小米将在下周发出邀请函，预计将于8月16日正式推出小米Note 2和小米智能手表。同时小米旗下还有一款型号为2015211的新机获得了3C认证和无线电发射型号核准，并且由于所配的充电器型号支持高通QC3.0快充技术，所以被推测有可能便是即将登场的小米Note 2。&lt;/p&gt;

&lt;p&gt;尽管坊间一直传闻小米会在8月份发布新机，但却并未得到官方的证实。不过，随着疑似小米Note 2谍照的曝光，网络上也终于传出小米发布会的消息。根据网友在微博上的爆料称，小米将于下周正式放出邀请函，预计在8月16日推出小米Note 2和小米智能手表。&lt;/p&gt;

&lt;p&gt;不过，以上消息的真实性尚未得到证实。但此前行业分析师@潘九堂曾经在微博上表示：“按生产计划，8月小米Note2和华米的智能手表都应该要发了。现在乐魅米华每月一言不合就开发布会，高烧停不下来，还预啥热啊。”因此，不出意外的话，备受期待的小米Note 2确有可能在8月16日正式登场。&lt;/p&gt;

</description>
        <pubDate>Fri, 05 Aug 2016 09:51:40 +0000</pubDate>
        <link>http://phycholee.github.com/news/digital/2016/08/05/xiaomi-note2.html</link>
        <guid isPermaLink="true">http://phycholee.github.com/news/digital/2016/08/05/xiaomi-note2.html</guid>
        
        
        <category>news</category>
        
        <category>digital</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 26 Jun 2016 07:38:40 +0000</pubDate>
        <link>http://phycholee.github.com/jekyll/2016/06/26/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://phycholee.github.com/jekyll/2016/06/26/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
